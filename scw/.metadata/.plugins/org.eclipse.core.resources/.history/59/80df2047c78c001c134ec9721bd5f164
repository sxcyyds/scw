<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- 事务配置 -->

<!-- 配置事务管理器 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"><!-- 装配数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 配置aop-->
	<aop:config>
		<!-- 配置切入点表达式 -->
		<aop:pointcut id="txpoint" expression="execution(* *..*service.*(..))"></aop:pointcut>
		<!-- 将事务通知和切入点表达式关联到一起 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txpoint"/>

	</aop:config>
	<!-- 配置事务通知 -->
	<!-- propagation 属性配置事务方法的传播行为 -->
		<!-- 默认值：REQUIRED 表示：当前方法必须运行在事务中，如果没有事务，则开启事务，在自己的事务中运行。如果已经有了已开启的事务，则在当前事务中运行。有可能和其他方法共用同一个事务。 -->
		<!-- 建议值：REQUIRES_NEW 表示：当前方法必须运行在事务中，如果没有事务，则开启事务，在自己的事务中运行。和 REQUIRED 的区别是就算现在已经有了已开启的事务，也一定要开启自己的事务，避免和其他方法共用同一个事务。 -->
		<!-- rollback-for 属性配置回滚的异常 -->
		<!-- 默认值：运行时异常 -->
		<!-- 建议值：编译时异常+运行时异常 -->
	<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="count*" read-only="true"/>
			
			
			
			
			<tx:method name="save*" propagation="REQUIRES_NEW"   rollback-for="java.lang.Exception" />
			<tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" />
						
		</tx:attributes>
	
	
	</tx:advice>



</beans>
